[project]
name = "breadcord"
version = "0.1.0"
description = "The modular self-hostable Discord bot framework with customisability that doesn't go against the grain"
urls = { Homepage = "https://github.com/Breadcord/Breadcord" }
authors = [
    { name = "ThatOtherAndrew", email = "andrew@breadcord.com" },
]
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["breadcord", "discord"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "aiofiles==23.2.1",
    "aiohttp==3.9.5",
    "discord.py==2.3.2",
    "packaging==24.1",
    "pydantic==2.7.2",
    "rapidfuzz==3.9.3",
    "rich==13.7.1",
    "textual==0.71.0",
    "tomlkit==0.12.5",
    "uv==0.2.21",
]

[project.optional-dependencies]
dev = [
    "gitignore-parser==0.1.11",
    "pre-commit==3.7.1",
    "ruff",
    "ruff-lsp",
    "textual-dev==1.5.1",
]

[project.scripts]
breadcord = "breadcord.__main__:app.run"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["breadcord"]


[tool.ruff.lint]
select = [
    "F",        # pyflakes
    "W",        # pycodestyle warnings
    "E",        # pycodestyle errors
    "C90",      # mccabe
    "I",        # isort
    "N",        # pep8-naming
    "D",        # pydocstyle
    "UP",       # pyupgrade
    "ASYNC",    # flake8-async
    "S",        # flake8-bandit
    "B",        # flake8-bugbear
    "COM",      # flake8-commas
    "C4",       # flake8-comprehensions
    "Q",        # flake8-quotes
    "RET",      # flake8-return
    "SIM",      # flake8-simplify
    "TCH",      # flake8-type-checking
    "ARG",      # flake8-unused-arguments
    "PTH",      # flake8-use-pathlib
    "PGH",      # pygrep-hooks
    "PL",       # Pylint
    "PERF",     # Perflint
    "RUF",      # Ruff-specific rules
]

ignore = [
    # Missing docstrings
    # This should be enabled in the future, but for now it's just too much at once
    "D10",

    # I have aged 30 years due to this rule
    # - Fripe
    "D401",

    # Wacky docstring defaults
    "D203",
    "D213",

    # Insane suggestion that pathlib.Path.open() should be prefered over open()
    "PTH123",

    # Too inflexible to be reasonable
    # https://github.com/Breadcord/Breadcord/pull/144#issuecomment-1732071028
    "PLR0913",

    # Warnings on every usage of the random module is outrageous
    "S311",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Unused imports in __init__.py are fine

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"
